{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\regin\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\neobank-app\\\\neobank-app-main\\\\src\\\\components\\\\Table.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const pathname = window.location.pathname;\n  let id = pathname.split(\"/\");\n  id = id[2];\n  const columns = [{\n    label: \"NUMBER\",\n    accessor: \"number\",\n    sortable: true\n  }, {\n    label: \"DATE\",\n    accessor: \"date\",\n    sortable: true\n  }, {\n    label: \"TOTAL PAYMENT\",\n    accessor: \"totalPayment\",\n    sortable: true\n  }, {\n    label: \"INTEREST PAYMENT\",\n    accessor: \"interestPayment\",\n    sortable: true\n  }, {\n    label: \"DEBT PAYMENT\",\n    accessor: \"debtPayment\",\n    sortable: true\n  }, {\n    label: \"REMAINING DEBT\",\n    accessor: \"remainingDebt\",\n    sortable: true\n  }];\n  const [sortField, setSortField] = useState(\"\");\n  const [order, setOrder] = useState(\"asc\");\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8080/admin/application/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(arr => {\n      setTableData(arr.credit.paymentSchedule);\n    });\n\n    /* ((arr) => {\r\n        for (let i = 0; i < arr.credit.paymentSchedule.length; i++) {\r\n        document.querySelector(\"#table\").innerHTML += `\r\n        <tr>\r\n              <td>${arr.credit.paymentSchedule[i].number}</td>\r\n              <td>${arr.credit.paymentSchedule[i].date}</td>\r\n              <td>${arr.credit.paymentSchedule[i].totalPayment}</td>\r\n              <td>${arr.credit.paymentSchedule[i].interestPayment}</td>\r\n              <td>${arr.credit.paymentSchedule[i].debtPayment}</td>\r\n              <td>${arr.credit.paymentSchedule[i].remainingDebt}</td>\r\n        </tr>\r\n              `;\r\n        \r\n      } \r\n        setTableData(arr.credit.paymentSchedule);\r\n    \r\n    }); */\n  }, []);\n  const handleSortingChange = column => {\n    const sortOrder = column === sortField && order === \"asc\" ? \"desc\" : \"asc\";\n    setSortField(column);\n    setOrder(sortOrder);\n    handleSorting(column, sortOrder);\n  };\n  const handleSorting = (sortField, sortOrder) => {\n    if (sortField) {\n      const sorted = [...tableData].sort((a, b) => {\n        if (a[sortField] === null) return 1;\n        if (b[sortField] === null) return -1;\n        if (a[sortField] === null && b[sortField] === null) return 0;\n        return a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\n          numeric: true\n        }) * (sortOrder === \"asc\" ? 1 : -1);\n      });\n      setTableData(sorted);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"payment_table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"payment_header\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(_ref => {\n            let {\n              label,\n              accessor,\n              sortable\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: sortable ? () => handleSortingChange(accessor) : null,\n              children: label\n            }, accessor, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"table\",\n        children: tableData.map(data => {\n          const cl = sortable ? sortField === accessor && order === \"asc\" ? \"up\" : sortField === accessor && order === \"desc\" ? \"down\" : \"default\" : \"\";\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(_ref2 => {\n              let {\n                accessor\n              } = _ref2;\n              const tData = data[accessor] ? data[accessor] : \"0\";\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tData\n              }, accessor, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 26\n              }, this);\n            })\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Table, \"GOcm+jHpG1GWrscX1HmqKMb31rA=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","Table","pathname","window","location","id","split","columns","label","accessor","sortable","sortField","setSortField","order","setOrder","tableData","setTableData","fetch","method","headers","then","response","json","arr","credit","paymentSchedule","handleSortingChange","column","sortOrder","handleSorting","sorted","sort","a","b","toString","localeCompare","numeric","map","data","cl","tData"],"sources":["C:/Users/regin/OneDrive/Рабочий стол/neobank-app/neobank-app-main/src/components/Table.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Table = () => {\r\n  const pathname = window.location.pathname;\r\n  let id = pathname.split(\"/\");\r\n  id = id[2];\r\n\r\n  const columns = [\r\n    { label: \"NUMBER\", accessor: \"number\", sortable: true  },\r\n    { label: \"DATE\", accessor: \"date\", sortable: true  },\r\n    { label: \"TOTAL PAYMENT\", accessor: \"totalPayment\", sortable: true  },\r\n    { label: \"INTEREST PAYMENT\", accessor: \"interestPayment\", sortable: true  },\r\n    { label: \"DEBT PAYMENT\", accessor: \"debtPayment\", sortable: true  },\r\n    { label: \"REMAINING DEBT\", accessor: \"remainingDebt\", sortable: true  },\r\n  ];\r\n  const [sortField, setSortField] = useState(\"\");\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8080/admin/application/${id}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((arr) => {\r\n        setTableData(arr.credit.paymentSchedule);\r\n      });\r\n\r\n    /* ((arr) => {\r\n        for (let i = 0; i < arr.credit.paymentSchedule.length; i++) {\r\n        document.querySelector(\"#table\").innerHTML += `\r\n        <tr>\r\n              <td>${arr.credit.paymentSchedule[i].number}</td>\r\n              <td>${arr.credit.paymentSchedule[i].date}</td>\r\n              <td>${arr.credit.paymentSchedule[i].totalPayment}</td>\r\n              <td>${arr.credit.paymentSchedule[i].interestPayment}</td>\r\n              <td>${arr.credit.paymentSchedule[i].debtPayment}</td>\r\n              <td>${arr.credit.paymentSchedule[i].remainingDebt}</td>\r\n        </tr>\r\n              `;\r\n        \r\n      } \r\n\r\n      setTableData(arr.credit.paymentSchedule);\r\n    \r\n    }); */\r\n  }, []);\r\n\r\n  const handleSortingChange = (column) => {\r\n    const sortOrder = column === sortField && order === \"asc\" ? \"desc\" : \"asc\";\r\n    setSortField(column);\r\n    setOrder(sortOrder);\r\n    handleSorting(column, sortOrder);\r\n  };\r\n\r\n  const handleSorting = (sortField, sortOrder) => {\r\n    if (sortField) {\r\n     const sorted = [...tableData].sort((a, b) => {\r\n      if (a[sortField] === null) return 1;\r\n      if (b[sortField] === null) return -1;\r\n      if (a[sortField] === null && b[sortField] === null) return 0;\r\n      return (\r\n       a[sortField].toString().localeCompare(b[sortField].toString(), \"en\", {\r\n        numeric: true,\r\n       }) * (sortOrder === \"asc\" ? 1 : -1)\r\n      );\r\n     });\r\n     setTableData(sorted);\r\n    }\r\n   };\r\n\r\n  return (\r\n    <>\r\n      <table className=\"payment_table\">\r\n        <thead className=\"payment_header\">\r\n          <tr>\r\n            {columns.map(({ label, accessor, sortable  }) => {\r\n              return <th key={accessor} onClick={sortable ? () => handleSortingChange(accessor) : null}>{label}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody id=\"table\">\r\n          {tableData.map((data) => {\r\n            const cl = sortable\r\n            ? sortField === accessor && order === \"asc\"\r\n             ? \"up\"\r\n             : sortField === accessor && order === \"desc\"\r\n             ? \"down\"\r\n             : \"default\"\r\n            : \"\";\r\n            return (\r\n              <tr key={data.id}>\r\n                {columns.map(({ accessor }) => {\r\n                  const tData = data[accessor] ? data[accessor] : \"0\";\r\n                  return <td key={accessor}>{tData}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}